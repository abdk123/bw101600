@model BWR.Application.Dtos.Company.CompanyCashDto

@{
    Layout = null;
}

<div class="row">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class=""></i>
                تهيئة العملات
            </div>
            <div class="tools"> </div>
        </div>
        <div class="portlet-body">
            <table class="table table-striped table-bordered table-hover dt-responsive" id="companyCashDt" cellspacing="0"></table>
        </div>
    </div>
</div>

<div class="modal fade" id="edit-dtModal" tabindex="-1" role="dialog" aria-labelledby="EditCompanyCash" aria-hidden="true" data-backdrop="static">
    <div id="edit-dtContainer">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">تعديل</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <input type="hidden" id="companyId-hidden" />
                        <input type="hidden" id="coinId-hidden" />

                        <div class="form-group">
                            <label class="control-label col-md-3" for="initialBalanceId">الرصيد الاولي </label>
                            <div class="col-md-9">
                                <input type="number" class="form-control" id="initialBalanceId" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="maxCreditorId">أكبر قيمة دائن </label>
                            <div class="col-md-9">
                                <input type="number" class="form-control" id="maxCreditorId" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="maxDebitId">أكبر قيمة مدين </label>
                            <div class="col-md-9">
                                <input type="number" class="form-control" id="maxDebitId"  />
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" id="edit-dtBtn" class="btn btn-success">تعديل <span class="glyphicon glyphicon-edit"></span></button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">إغلاق <span class="glyphicon glyphicon-remove"></span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var $companyCashDT;
    var $tableData;
    var coinId;
    var companyId;
    var editRow;
    $(function () {
        var companyId = '@Model.CompanyId';
        initialCompanyCashDT(companyId);
    });

    function initialCompanyCashDT(companyId) {

        $companyCashDT = {
            dt: null,
            init: function () {
                dt = $('#companyCashDt').DataTable({
                    'language': dataTableLocalizationArValue(),

                    'ajax': {
                        'url': '@Url.Action("GetCompanyBalance", "CompanyCash")',
                        method: 'POST',
                        data: { 'companyId': companyId }
                    },
                    'columns': [
                        { 'title': 'اسم العملة', 'data': 'CoinName', "width": "20%", 'searchable': true, 'className': 'CoinName' },
                        {
                            'title': 'الرصيد الاولي', 'data': 'InitialBalance', "width": "20%", 'searchable': true, 'className': 'InitialBalance'
                        },
                        { 'title': 'أكبر قيمة دائن', 'data': 'MaxCreditor', "width": "20%", 'searchable': true, 'className': 'MaxCreditor' },
                        { 'title': 'أكبر قيمة مدين', 'data': 'MaxDebit', "width": "20%", 'searchable': true, 'className': 'MaxDebit' },
                        {
                            'title': 'خيارات',
                            'data': 'Id',
                            'searchable': false,
                            'sortable': false,
                            'render': function (data, type, full, meta) {
                                return '<a href="#" data-id="' + data + '" class="btn btn-primary btn-sm edit-dt" style="display:inline;"><span class="glyphicon glyphicon-edit"></span>  تعديل  </a>' +
                                    '<a href="#" data-id="' + data + '" class="btn btn-success  btn-sm save-dt" style="display:none;"><span class="fa fa-save"></span>  حفظ   </a>' +
                                    '<a href="#"  class="btn btn-default  btn-sm cancel-dt" style="display:none;"><span class="fa fa-close"></span> إلغاء الامر</a>';
                            }
                        }
                    ],
                    'lengthMenu': [10, 25, 50, 100],
                });
            },

            refresh: function () {

                dt.ajax.reload();
            }
        }

        $companyCashDT.init();

        setTimeout(function () {
            $tableData = getDataFromDataTable('#companyCashDt');
        }, 500);


        $('#companyCashDt').on('click', '.edit-dt', function (event) {

            event.preventDefault();

            $tableData = getDataFromDataTable('#companyCashDt');

            reInitAnotherRows(event.target);
            initialDtInputs(event.target);

        });

        $('#companyCashDt').on('click', '.save-dt', function (e) {

            e.preventDefault();

            saveRowData(e);
        });

        $('#companyCashDt').on('click', '.cancel-dt', function (e) {
            e.preventDefault();

            $companyCashDT.refresh();
        });
    }

    function saveRowData(e) {

        var id = $(e.toElement).attr('data-id');
        var tr = getRowFormAnyElement(e.target);

        var dto = getRowDataById(id);

        var initialBalanceTd = $(tr).find('td.InitialBalance');
        dto['InitialBalance'] = $(initialBalanceTd).find('input').val();

        var maxCreditorTd = $(tr).find('td.MaxCreditor');
        dto['MaxCreditor'] = $(maxCreditorTd).find('input').val();

        var maxDebitTd = $(tr).find('td.MaxDebit');
        dto['MaxDebit'] = $(maxDebitTd).find('input').val();

        $.ajax({
            url: '@Url.Action("EditCompanyCash", "CompanyCash")',
            type: 'POST',
            data: dto,
            dataType: "json",
            cache: false,
            success: function (data) {

                if (data.Success == true) {

                    $companyCashDT.refresh();
                    toastr.success('تم الحفظ بنجاح');
                }
                else {
                    toastr.error(data.Message);
                }

            },
            error: function () { toastr.error("خدث خطأ ما أثناء الإضافة"); }
        });
    }


    function initialDtInputs(e) {
        var tr = getRowFormAnyElement(e);
        debugger;

        tr.find('a.save-dt').css('display', 'inline');
        tr.find('a.cancel-dt').css('display', 'inline');
        tr.find('a.edit-dt').css('display', 'none');

        var tds = tr.find('td');

        initialTdInput(tds[1]);
        initialTdInput(tds[2]);
        initialTdInput(tds[3]);

        editRow = tr;
    }

    function initialTdInput(td) {
        var ele = $(td);
        var val = ele.text();
        ele.html("");

        $('<input>').attr({
            type: 'number',
            'class': 'form-control',
            value: val
        }).appendTo(td);
    }

    function disposeDtInputs(e) {
        var tr = getRowFormAnyElement(e);
        var tds = tr.find('td');

        disposeTdInput(tds[1]);
        disposeTdInput(tds[2]);
        disposeTdInput(tds[3]);
    }

    function disposeTdInput(td) {

        var ele = $(td);
        var input = ele.find('input');
        if (input != undefined && input != null) {
            var val = $(input).val();
            ele.html("");
            ele.text(val);

        }

    }

    function reInitAnotherRows(e) {

        var eleTr = getRowFormAnyElement(e);

        if (editRow != null && editRow != "") {

            var btnEdit = $(editRow).find('a.edit-dt');
            var btnSave = $(editRow).find('a.save-dt');
            var btnCancel = $(editRow).find('a.cancel-dt');

            $(btnSave).css('display', 'none');
            $(btnCancel).css('display', 'none');
            $(btnEdit).css('display', 'inline');

            var tds = editRow.find('td');
            var currentTr = getRowFormAnyElement(e);
            debugger;
            if (btnEdit != undefined && btnEdit != null) {
                var id = $(btnEdit).attr("data-id");
                var rowData = getRowDataById(id);
                if (rowData != null) {

                    $(tds[1]).html("");
                    $(tds[1]).text(rowData['InitialBalance']);

                    $(tds[2]).html("");
                    $(tds[2]).text(rowData['MaxCreditor']);

                    $(tds[3]).html("");
                    $(tds[3]).text(rowData['MaxDebit']);

                }
            }
        }

        editRow = null;
    }

    function getDataFromDataTable(selector) {

        var data = $(selector).dataTable().fnGetData();
        return data;
    }

    function getRowDataById(id) {

        for (var i = 0; i < $tableData.length; i++) {
            var rowData = $tableData[i];
            if (rowData.Id == id)
                return rowData;
        }
        return null;
    }

    function getRowFormAnyElement(elemet) {

        var tdElement = $(elemet).parent();
        return $(tdElement).parent();

        //if (elemet == undefined || elemet == null)
        //    return undefined;
        //if (elemet.tagName == "TR") {
        //    return elemet;
        //}
        //return getRowFormAnyElement(elemet.parentElement);
    }

</script>

