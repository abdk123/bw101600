

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_BlankPageLayout.cshtml";
}
@section  Style{
    <!--Data Table Style-->
    <link href="~/Content/assets/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap-rtl.css" rel="stylesheet"
          type="text/css" />
    <!--End Data Table Style-->
    <!--Begin Css Jquery Confirm-->
    <link href="~/Content/Jquery-Confirm/Jquery-confrim-css.css" rel="stylesheet" />
    <!--END Css Jquery Confirm-->
}
<div class="row">
    <div class="col-lg-4">
        <label>العملة :</label>
        <select class="form-control" id="coinSelect"></select>
    </div>
    <div class="col-lg-3">
        <label>من الفترة:</label>
        <input type="date" class="form-control" id="formDate" formaction="dd/mm/yyyy" />
    </div>
    <div class="col-lg-3">
        <label>إلى الفترة:</label>
        <input type="date" class="form-control" id="toDate" />
    </div>
    <div class="col-lg-2">
        <label>الرصيد الفعلي</label>
        <span class="label label-success" id="TheActualBalance"></span>
    </div>
</div>
<table class="table table-striped table-bordered table-hover dt-responsive"
       width="100%" id="cashFlow" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th>
                الرصيد
            </th>
            <th>
                الوارد
            </th>
            <th>
                الصادر
            </th>
            <th>
                النوع
            </th>
            <th>
                الأسم
            </th>
            <th>
                رقم السند
            </th>
            <th>
                التاريخ
            </th>
            <th>
                الملاحظات
            </th>
            <th>
                المنشئ
            </th>
            <th>
                تفاصيل
            </th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
@section ScriptPath{
    <!--BEGIN DATA TABLE JS-->
    <!--data table js -->
    <script src="~/Content/assets/global/scripts/datatable.js" type="text/javascript"></script>
    <script src="~/Content/assets/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
    <script src="~/Content/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js"
            type="text/javascript"></script>
    <!--End Data table js -->
    <!-- BEGIN PAGE LEVEL SCRIPTS -->
    <script src="~/Content/assets/pages/scripts/table-datatables-responsive.min.js" type="text/javascript"></script>
    <!-- END THEME LAYOUT SCRIPTS -->
    <!--END DATA TABLE JS-->
    <!--Begin js Jquery Confirm-->
    <script src="~/Content/Jquery-Confirm/Jquery-Confirm-Script.js"></script>
    <!--END js Jquery Confirm-->
    <script src="~/Scripts/GlopalScript.js"></script>
    @*<script src="~/Scripts/BranchCashFlows/Index.js"></script>*@
}

<script>

    var getUrlParams = function (url) {
        var params = {};
        (url + '?').split('?')[1].split('&').forEach(
            function (pair) {
                pair = (pair + '=').split('=').map(decodeURIComponent);
                if (pair[0].length) {
                    params[pair[0]] = pair[1];
                }
            });

        return params;
    };
    var params = getUrlParams(window.location.href);
    $(document).ready(function () {
        fillCoinSelected();
        $('#toDate').val(params.to);
        $('#formDate').val(params.from);
        FillCashFlowTalbe(params.branchid, params.coinId, params.from, params.to);
        GetActualuBalnce(params.coinId);
    });
    function fillCoinSelected() {
        $.post(
            '@Url.Action("GetForBranch", "BranchCash")', {
                id: params.branchid
            }, function (data) {
                var coinSelect = document.getElementById('coinSelect');
                for (var i = 0; i < data.length; i++) {
                    var option = document.createElement('option');
                    option.innerText = data[i].CoinName;
                    option.value = data[i].CoinId;
                    if (data[i].CoinId == params.coinId) {
                        option.selected = true;
                    }
                    coinSelect.appendChild(option);
                }
            }
        )
    }
    var cashFlow = $('#cashFlow').DataTable({
        "ordering": true,
        "columnDefs": [{
            "orderable": false, targets: "no-sort"
        }],
        "order": 6,
        "language": {
            "search": "البحث",
            "info": "عرض _START_ إلى _END_ من _كل_ العناصر",
            "emptyTable": "لا يوجد اي عناصر للعرض",
            "infoEmpty": "لا يوجد اي عناصر",
            "zeroRecords": "لا يوجد اي عناصر مطابقة",
            "infoFiltered": "",
        }
    });
    function FillCashFlowTalbe(branchId, coinId, from, to) {
        $.get(
            'GetCashFlow', {
                branchId: branchId,
                coinId: coinId,
                from: from,
                to: to
            },
            function (data) {
                console.log(data);

                cashFlow.clear().draw();
                for (var i = 0; i < data.length; i++) {
                    var button = "";
                    if (i != 0) {
                        var button = "<a href='GetDetialsById?id=" + data[i].MoneyActionId + "' class='btn btn-priamary'>تفاصيل</a>";
                    }
                    var Incom = "";
                    var outer = "";
                    if (data[i].amount > 0)
                        Incom = data[i].amount;
                    else if (data[i].amount < 0)
                        outer = parseFloat(data[i].amount) * -1;
                    if (!isNaN(Incom) && Incom != "") {
                        Incom = parseFloat(Incom);
                    }
                    if (!isNaN(outer) && outer != "") {
                        outer = parseFloat(outer);
                    }
                    cashFlow.row.add([

                        numberWithCommas(parseFloat(data[i].Balnce)),
                        numberWithCommas((Incom)),
                        numberWithCommas((outer)),
                        data[i].Type,
                        data[i].Name,
                        data[i].Number,
                        data[i].Date,
                        data[i].Note,
                        data[i].CreatedBy,
                        button,
                    ]).draw();
                }
            }
        );
    }
    $('#coinSelect').change(function () {
        FillCashFlowTalbe(params.branchid, $(this).val(), $('#formDate').val(), $('#toDate').val());
        GetActualuBalnce($(this).val());
    });
    $('#formDate').change(function () {
        FillCashFlowTalbe(params.branchid, $('#coinSelect').val(), $(this).val(), $('#toDate').val());
    });
    $('#toDate').change(function () {
        FillCashFlowTalbe(params.branchid, $('#coinSelect').val(), $('#formDate').val(), $(this).val());

    });
    function GetActualuBalnce(coinId) {
        $('#TheActualBalance').text('');
        $.get(
            '/BranchCash/GetAuctluBlance?coinId=' + coinId,
            function (data) {
                $('#TheActualBalance').text(numberWithCommas(data));
            }
        )

    }
</script>

