
@model BWR.Application.Dtos.Setting.Country.CountryUpdateDto
@{
    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">تعديل بلد</h4>
        </div>
        @using (Ajax.BeginForm("Edit", "Country", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "editCountrySuccess" }, new { @class = "form-horizontal", role = "form", id = "editCountryForm" }))
        {
            <div class="modal-body">
                <div class="col-lg-12 col-md-12">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item active">
                            <a class="nav-link active" id="country-tab" data-toggle="tab" href="#editCountrySection" role="tab">بيانات البلد</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="provinces-tab" data-toggle="tab" href="#editProvinceSection" role="tab">المحافظات</a>
                        </li>
                    </ul>
                </div>

                <div class="col-lg-12 col-md-12">
                    <div class="tab-content">
                        <div class="tab-pane active" id="editCountrySection">

                            <div class="form-horizontal">

                                @Html.HiddenFor(model => model.Id)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    <label class="control-label col-md-2" for="Name">اسم البلد <span class="text-danger">*</span></label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2" for="Name">فعالة </label>
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            <label>
                                                @Html.EditorFor(model => model.IsEnabled, new { htmlAttributes = new { @class = "flat" } })
                                            </label>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="tab-pane" id="editProvinceSection">

                            <div class="row">
                                <div class="col-sm-4 col-sm-4"></div>

                                <div class="col-md-4 col-sm-4">
                                    <h4>إضافة مدن للبلد</h4>
                                </div>
                            </div>

                            <div style="margin-bottom:10px;"></div>

                            <div class="row">
                                <div class="col-md-8">
                                    <button type="button" class="btn btn-success" id="addProvinceTextBtn">إضافة حقل جديد <span class="fa fa-plus"></span></button>
                                </div>
                            </div>
                            <div style="margin-bottom:10px;"></div>
                            <div class="row">
                                <div class="col-md-3 col-sm-3"></div>
                                <div class="col-md-8 col-sm-8">
                                    <div class="row e-province-group">

                                       

                                    </div>
                                </div>
                            </div>

                            <div style="margin-bottom:15px;"></div>
                        </div>

                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" id="btnEditCountry" class="btn btn-primary">حفظ <span class="glyphicon glyphicon-save"></span></button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">إغلاق <span class="glyphicon glyphicon-remove"></span></button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>

    var countryId;
    var rowId;

    $(function () {
        $('input.flat').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });
        //========
        countryId = '@Html.Raw(Model.Id)';

        var $form = $("#editCountryForm");
        $.validator.unobtrusive.parse($form);

        $('#btnEditCountry').on("click", function (event) {
            if ($form.valid()) {
                var dto = {
                    Id: countryId,
                    Name: $('#Name').val(),
                    Provinces: getProvincesValues(),
                    IsEnabled: getIsEnableValue()
                };

                $.ajax({
                    url: '@Url.Action("Edit", "Country")',
                    type: 'POST',
                    data: dto,
                    dataType: "json",
                    cache: false,
                    success: function (data) {

                        if (data.Success == true) {
                            $('#editCountryModal').modal('hide');
                            $('#editCountryContainer').html('');

                            $countryDataTable.refresh();
                            toastr.success('تم الحفظ بنجاح')
                        }
                        else {
                            if (data.Exist == true) {
                                $('[data-valmsg-for="Name"]').html("");
                                $('[data-valmsg-for="Name"]').html(data.Message);
                            }

                            toastr.error(data.Message);
                        }

                    },
                    error: function () { toastr.error("خدث خطأ ما أثناء الإضافة"); }
                });

            }


        });

        initNewProvinceEle();

        $('#addProvinceTextBtn').click(function () {
            addProvinceTextELement();
        });
    });

    function initNewProvinceEle() {

        //var provinceEles = $('.e-province');
        //var lastProvinceEle = provinceEles[provinceEles.length - 1];
        //newProvinceEle = $(lastProvinceEle).clone();
        var provinceEle = getHtml();

        
        var provinces =@Html.Raw(Json.Encode(Model.Provinces));
        for (var i = 0; i < provinces.length; i++) {
            var province = provinces[i];
            $('.e-province-group').append(provinceEle);

            var inputEle = $('.e-province-group :input.e-province-input').last();
            inputEle.val(province.Name);
            inputEle.attr('date-province-id', province.Id);
        }

    }

    function addProvinceTextELement() {

        var isEmpty = false;
        
        $('.e-province-group :input.e-province-input').each(function (data) {
            var value = $(this).val();
            if (value.trim() == "") {
                isEmpty = true;
                return;
            }
        });

        if (!isEmpty) {
            var provinceEle = getHtml();
            $('.e-province-group').append(provinceEle);

            //remove copy value from new textbox
            var inputEle = $('.e-province-group :input.e-province-input').last();
            inputEle.val("")
            inputEle.attr('date-province-id', 0);
        }

    }

    function getProvincesValues() {
        var provinces = [];

        $('.e-province-group :input.e-province-input').each(function (data) {

            var value = $(this).val();
            id = $(this).attr('date-province-id');
            if (value.trim() != "" && value != null) {

                provinces.push({ 'Id': id, 'Name': value.trim(), 'IsEnabled': true });
            }
        });

        return provinces;
    }


    function getIsEnableValue() {
        var divChecked = $('#IsEnabled').parent();
        if (divChecked.hasClass('checked'))
            return true;
        else
            return false;
    }

    function getHtml() {
        return '<div class="col-md-8 col-sm-8 e-province" style="margin-bottom:5px;">' +
            '<div class="input-group">' +
            '<input type="text" date-province-id="0" placeholder="ادخل اسم المدينة" class="form-control has-error e-province-input" value="" />' +
            '<span class="input-group-addon" onclick="this.parentElement.parentElement.remove();"><span class="fa fa-close"></span></span>' +
            '</div > ' +
            '</div >';
    }
</script>
