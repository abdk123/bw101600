
@model BWR.Application.Dtos.Company.CompanyCommission.CompanyCommissionInsertDto
@{
    /**/

    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">إضافة عمولة </h4>
        </div>
        
        @using (Ajax.BeginForm("Create", "CompanyCommission", null, new AjaxOptions { HttpMethod = "Post" }, new { @class = "form-horizontal", role = "form", id = "addCompanyCommissionForm" }))
        {
            <div class="modal-body ">

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    
                    <div class="form-group">
                        <label class="control-label col-md-2" for="CountryId">اسم البلد <span class="text-danger">*</span></label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CompanyCountryId, new List<SelectListItem>(), new { @class = "form-control", id = "a-countryId" })

                            @Html.ValidationMessageFor(model => model.CompanyCountryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" for="CoinId">اسم العملة <span class="text-danger">*</span></label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CoinId, new List<SelectListItem>(), new { @class = "form-control", id = "a-coinId" })

                            @Html.ValidationMessageFor(model => model.CoinId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" for="StartRange">من <span class="text-danger">*</span></label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartRange, new { htmlAttributes = new { @class = "form-control", type = "number", id = "a-startRange" } })

                            @Html.ValidationMessageFor(model => model.StartRange, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" for="EndRange">إلى </label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EndRange, new { htmlAttributes = new { @class = "form-control", type = "number", id = "a-endRange" } })

                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" for="CommissionType">اسم البلد <span class="text-danger">*</span></label>
                        <div class="col-md-10">
                            @Html.DropDownList("CommissionType", new List<SelectListItem>(), new { @class = "form-control", id = "a-commissionType" })

                            @Html.ValidationMessage("CommissionType", "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" id="a-form-group-cost">
                        <label class="control-label col-md-2" for="Cost">القيمة <span class="text-danger">*</span></label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", type = "number", id = "a-cost" } })

                            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" id="a-form-group-ratio" style="display:none;">
                        <label class="control-label col-md-2" for="Ratio">القيمة <span class="text-danger">*</span></label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Ratio, new { htmlAttributes = new { @class = "form-control", type = "number", id = "a-ratio" } })

                            @Html.ValidationMessageFor(model => model.Ratio, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>

            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                        <button id="btnAddCompanyCommission" type="button" class="btn btn-primary">حفظ <span class="glyphicon glyphicon-save"></span></button>
                        <button type="button" class="btn btn-sm btn-default" onclick="resetCreateCompanyCommissionContainer()" data-dismiss="modal">إغلاق <span class="glyphicon glyphicon-remove"></span></button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>

    var companyId;
    $(function () {
        initialCommissionTypes();
        initialCoins();
        initialCountries();
        var $form = $("#addCompanyCommissionForm");
        $.validator.unobtrusive.parse($form);

        $('#btnAddCompanyCommission').on("click", function (event) {
            if ($form.valid()) {
                var dto = {
                    StartRange: $('#a-startRange').val(),
                    EndRange: $('#a-endRange').val(),
                    Cost: $('#a-cost').val(),
                    Ratio: $('#a-ratio').val(),
                    IsEnabled: true,
                    CoinId: getSelectedCoin(),
                    CompanyCountryId: getSelectedCountry()
                };

                if (getSelectedCommissionType() == "Ratio" && dto.Ratio == 0) {

                    $('[data-valmsg-for="Ratio"]').html("");
                    $('[data-valmsg-for="Ratio"]').html("القيمة مطلوبة");

                } else if (getSelectedCommissionType() == "Cost" && dto.Cost == 0) {

                    $('[data-valmsg-for="Cost"]').html("");
                    $('[data-valmsg-for="Cost"]').html("القيمة مطلوبة");

                } else {

                    $.ajax({
                    url: '@Url.Action("Create", "CompanyCommission")',
                    type: 'POST',
                    data: {'dto':dto,'commissionType':getSelectedCommissionType()},
                    dataType: "json",
                    cache: false,
                    success: function (data) {

                        if (data.Success == true) {

                            $companyCommissionDataTable.refresh();

                            resetCreateCompanyCommissionContainer();
                            toastr.success('تم الحفظ بنجاح');
                        }
                        else {

                            toastr.error(data.Message);
                        }

                    },
                    error: function () { toastr.error("خدث خطأ ما أثناء الإضافة"); }
                });
                }



            }


        });
    });

    //===Initial Functions===//
    function initialCountries() {
         $.get('@Url.Action("GetForDropdown", "CompanyCountry")',{"companyId": $companyId}, function (data) {

             var countries = data.Countries;

             var option = '<option index="0"></option>';
             $('#a-countryId').append(option);

            for (var i = 0; i < countries.length; i++) {
                var option = '<option value="' + countries[i].Id + '">' + countries[i].Name + '</option>';
                $('#a-countryId').append(option);
            }

             $('#a-countryId').select2({ width: null, placeholder: "اختر منطقة" });

             //$("#a-client-countryId").select2("val", "");
             $('#a-countryId').val('').trigger('change')

        });
    }

    function initialCoins() {

        $.get('@Url.Action("GetCoinsForDropdown","Coin")', { term: "" }, function (data) {

            var coins = data.Coins;
            var option = '<option index="0"></option>';
            $('#a-coinId').append(option);

            for (var i = 0; i < coins.length; i++) {
                var option = '<option value="' + coins[i].Id + '">' + coins[i].Name + '</option>';
                $('#a-coinId').append(option);
            }

            $('#a-coinId').select2({ width: null, placeholder: "اختر عملة" });

            $('#a-coinId').val('').trigger('change')

        });
    }

    function initialCommissionTypes() {
        var option = '<option index="0"></option>';

        $('#a-commissionType').append('<option value="Cost">عمولة</option>');
        $('#a-commissionType').append('<option value="Ratio">نسبة</option>');

        $('#a-commissionType').select2({ width: null, placeholder: "النوع" });

        $('#a-commissionType').on('select2:select',
            function (e) {
                var value = e.params.data.id;
                if (value == "Ratio") {
                    $('#a-form-group-ratio').css("display", "block");
                    $('#a-form-group-cost').css("display", "none");
                } else {
                    $('#a-form-group-ratio').css("display", "none");
                    $('#a-form-group-cost').css("display", "block");
                }
            });

    }
    //===Get Functions===//
    function getSelectedCountry() {
    debugger;
        var data = $('#a-countryId').select2('data');
        return data[0].id;
    }

    function getSelectedCoin() {

        var data = $('#a-coinId').select2('data');
        return data[0].id;
    }

    function getSelectedCommissionType() {
        var data = $('#a-commissionType').select2('data');
        return data[0].id;
    }

    function getIsEnableValue() {
        var divChecked = $('[name="IsEnabled"]').parent();
        if (divChecked.hasClass('checked'))
            return true;
        else
            return false;
    }

    function resetCreateCompanyCommissionContainer() {

        $('#createCompanyCommissionModal').modal('hide');
        $('#createCompanyCommissionContainer').html('');
    }

</script>
