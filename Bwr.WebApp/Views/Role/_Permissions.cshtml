@model BWR.Application.Dtos.Role.RoleDto
@{
    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <a href="#"><h4> إضافة الصلاحيات للدور <span id="p-role-name" class="badge">@Model.Name</span></h4></a>
        </div>

        <div class="modal-body">
            <div class="row">
                <div class="col-md-1"></div>
                <div class="col-md-10">
                    <table class="class=" table table-striped table-bordered table-hover dt-responsive"" id="pDataTable">
                        <thead>
                            <tr>
                                <th><input type="checkbox" class="head-checkbox" /></th>
                                <th>اسم الصلاحية</th>

                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="col-md-1"></div>

            </div>
        </div>

        <div class="modal-footer">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button id="p-add" class="btn btn-success" type="button">
                        <i class="fa fa-save"></i>   حفظ
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">إغلاق <span class="glyphicon glyphicon-remove"></span></button>
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    var pTable;
    $(function () {
        $('input.flat').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });

        pTable = $('#pDataTable').dataTable({
            'language': dataTableLocalizationArValue(),
            "scrollY": "300px",
            "scrollCollapse": true,
            "paging": false
        });


        initialPermissionsDataTable();

        $('#p-add').on('click', function () {
            var checkedPermissions = getCheckedPermissions();
            $.ajax({
                url: '@Url.Action("AddPermissions", "Role")',
                type: 'POST',
                data: { 'permissions': checkedPermissions,'roleId':'@Model.RoleId'},
                    dataType: "json",
                    cache: false,
                    success: function (data) {

                        if (data.Success == true) {
                            $('#permissionsRoleModal').modal('hide');
                            $('#permissionsRoleContainer').html('');

                            toastr.success('تم الحفظ بنجاح')
                        }
                        else {

                            toastr.error("خدث خطأ ما أثناء الحفظ");
                        }

                    },
                    error: function () { toastr.error("خدث خطأ ما أثناء الحفظ"); }
                });
        });
    });

    function initialPermissionsDataTable() {

        //var editDT = $('#pDataTable').DataTable();

        $.get('@Url.Action("GetPermissions", "Role")', { roleId: '@Html.Raw(Model.RoleId)' },
            function (data, textStatus, jqXHR) {
                if (textStatus == 'success') {

                    initCheckBox(data);
                }

            });
        }

    function resetPermissionsCoinContainer() {

        $('#detailsCoinModal').modal('hide');
        $('#detailsCoinContainer').html('');
    }

    function initCheckBox(data) {
        
        var editDT = $('#pDataTable').DataTable();

        var permissions = data.Permissions;
        for (var i = 0; i < permissions.length; i++) {
            var option = permissions[i].Option;
            var isChecked = permissions[i].IsExist;

            var checkBoxEle = '<input type="checkbox" class="perm-checkbox" p-value="' + option+'" />';
            if (isChecked)
                checkBoxEle = '<input type="checkbox" class="perm-checkbox" checked="checked" p-value="' + option +'" />';

            editDT.row.add([checkBoxEle, option]).draw(false);
        }
        
        $('.perm-checkbox').change(function () {
            
            if (!$(this).is(":checked")) {
                $('.head-checkbox').prop('checked', false);
            }
                
        });

        $('.head-checkbox').change(function () {
            
            $(".perm-checkbox", pTable.fnGetNodes()).each(function () {
                if ($('.head-checkbox').is(":checked"))
                    $(this).prop('checked', true);
                else
                    $(this).prop('checked', false);
            });
        });
    }

    function getCheckedPermissions() {
        var checkedPermissions = [];

        $(".perm-checkbox", pTable.fnGetNodes()).each(function () {
            if ($(this).is(":checked"))
                checkedPermissions.push($(this).attr('p-value'));
           
        });

        return checkedPermissions;
    }

</script>